# HARDWARE_PATH, TESTS_PATH, CL_DIR, C_REGRESSION_TESTS, and
# REGRESSION_TESTS_TYPE must be set by the including makefile

SIMULATOR=vivado

DEFINES  += -DVIVADO_SIM

RTL_TB_WORKLIB = cosimulation
RTL_TB_LIBS    = axis_register_slice_v1_1_17 fifo_generator_v13_2_2
RTL_TB_LIBS    += axis_data_fifo_v1_1_18 axis_dwidth_converter_v1_1_16
RTL_TB_LIBS    += axi_fifo_mm_s_v4_1_14 axi_clock_converter_v2_1_11
RTL_TB_LIBS    += axis_infrastructure_v1_1_0 generic_baseblocks_v2_1_0
RTL_TB_LIBS    += axi_infrastructure_v1_1_0 axi_register_slice_v2_1_15
RTL_TB_LIBS    += axi_register_slice_v2_1_12 fifo_generator_v13_2_1
RTL_TB_LIBS    += fifo_generator_v13_1_4 axi_data_fifo_v2_1_11
RTL_TB_LIBS    += axi_crossbar_v2_1_13 xil_defaultlib unisims_ver
RTL_TB_LIBS    += unimacro_ver secureip xpm

AXI_MEMORY_MODEL ?= 1
XVLOG_FLAGS := $(if $(AXI_PROT_CHECK),-d ENABLE_PROTOCOL_CHK,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d AXI_MEMORY_MODEL=1,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d ECC_DIRECT_EN,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d RND_ECC_EN,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d ECC_ADDR_LO=0,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d ECC_ADDR_HI=0,)
XVLOG_FLAGS += $(if $(AXI_MEMORY_MODEL),-d RND_ECC_WEIGHT=0,)

XELAB_FLAGS += $(if $(AXI_PROT_CHECK),-d ENABLE_PROTOCOL_CHK,)

XSC_FLAGS   := $(foreach inc,$(INCLUDES),--additional_option "$(inc)")
XSC_FLAGS   += $(foreach def,$(CFLAGS),--additional_option "$(def)")
XSC_FLAGS   += $(foreach def,$(DEFINES),--additional_option "$(def)")

XSIM_FLAGS := $(if $(DEBUG),-gui,)
XSIM_FLAGS += $(if $(DEBUG),-tclbatch waves.tcl,)

$(C_REGRESSION_TESTS): %: $(SIM_PATH)/%.so
$(SIM_PATH)/%.so: $(TESTS_PATH)/%.c $(CSOURCES)
	xsc $? $(XSC_FLAGS) $(XSC_FLAGS) -o $@ 

$(SIM_PATH)/xsim.dir/$(RTL_TB_WORKLIB): $(TESTBENCH_PATH)/top.vivado.f 
$(SIM_PATH)/xsim.dir/$(RTL_TB_WORKLIB): $(TESTBENCH_PATH)/$(V_TOP_SRC).sv $(HARDWARE_TARGETS)
	CL_DIR=$(CL_DIR) \
	BSG_MANYCORE_DIR=$(BSG_MANYCORE_DIR) \
	BASEJUMP_STL_DIR=$(BASEJUMP_STL_DIR) \
	XILINX_IP=$(XILINX_IP) \
	xvlog --sv -m64 $(XVLOG_FLAGS) --work $(RTL_TB_WORKLIB) --relax  \
		--initfile $(XILINX_VIVADO)/data/xsim/ip/xsim_ip.ini  \
		-f $(TESTBENCH_PATH)/top.vivado.f $< 

$(SIM_PATH)/xsim.dir/%: $(SIM_PATH)/%.so | $(SIM_PATH)/xsim.dir/$(RTL_TB_WORKLIB) 
	CL_DIR=$(CL_DIR) \
	BSG_MANYCORE_DIR=$(BSG_MANYCORE_DIR) \
	BASEJUMP_STL_DIR=$(BASEJUMP_STL_DIR) \
	XILINX_IP=$(XILINX_IP) \
	xelab -m64 $(XELAB_FLAGS) --timescale 1ps/1ps --debug typical --relax \
		--mt 8 --initfile $(XILINX_VIVADO)/data/xsim/ip/xsim_ip.ini \
		$(foreach lib,$(RTL_TB_LIBS), -L $(lib)) $(RTL_TB_WORKLIB).tb \
		$(RTL_TB_WORKLIB).glbl $(RTL_TB_WORKLIB).$(V_TOP_SRC) \
		--snapshot $(notdir $@) -sv_lib $(notdir $@)

$(SIM_LOG_TARGETS): %.cosim.log: $(SIM_PATH)/%.cosim.log
$(SIM_PATH)/%.cosim.log: $(SIM_PATH)/xsim.dir/%
	CL_DIR=$(CL_DIR) \
	BSG_MANYCORE_DIR=$(BSG_MANYCORE_DIR) \
	BASEJUMP_STL_DIR=$(BASEJUMP_STL_DIR) \
	XILINX_IP=$(XILINX_IP) \
	xsim $(XSIM_FLAGS) -R -log $@ $(notdir $<)

.PHONY: simulator.clean
.PRECIOUS: $(SIM_PATH)/%.log $(SIM_PATH)/xsim.dir $(SIM_PATH)/%.so $(SIM_PATH)/xsim.dir/% 

simulator.clean: hardware.clean
	rm -rf $(SIM_PATH)/.Xil $(SIM_PATH)/xsim.dir
	rm -rf $(SIM_PATH)/*.log $(SIM_PATH)/*.jou $(SIM_PATH)/*.pb 
	rm -rf $(SIM_PATH)/*.dat $(SIM_PATH)/*.wdb $(SIM_PATH)/*.so
