SIMULATOR=VCS
SIMLIBS_PATH=$(TESTBENCH_PATH)/vcs_simlibs

AXI_MEMORY_MODEL ?= 1

VLOGAN_DEFINES := +define+VCS
VLOGAN_DEFINES += $(if $(AXI_PROT_CHECK),+define+ENABLE_PROTOCOL_CHK,)
VLOGAN_DEFINES += $(if $(AXI_PROT_CHECK),+define+ENABLE_PROTOCOL_CHK,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+AXI_MEMORY_MODEL=1,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+ECC_DIRECT_EN,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+RND_ECC_EN,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+ECC_ADDR_LO=0,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+ECC_ADDR_HI=0,)
VLOGAN_DEFINES += $(if $(AXI_MEMORY_MODEL),+define+RND_ECC_WEIGHT=0,)

VLOGAN_FILELIST := $(TESTBENCH_PATH)/top.vcs.f
VLOGAN_VFLAGS = -ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps -sverilog \
	+systemverilogext+.svh +systemverilogext+.sv \
	+libext+.sv +libext+.v +libext+.vh +libext+.svh \
	-full64 -lca -v2005 +v2k +lint=TFIPC-L -assert svaext 

DEFINES += -DVCS
VCS_CFLAGS = $(foreach def,$(CFLAGS),-CFLAGS "$(def)")
VCS_CFLAGS += $(foreach def,$(DEFINES),-CFLAGS "$(def)")
VCS_CFLAGS += $(foreach def,$(INCLUDES),-CFLAGS "$(def)")
VCS_VFLAGS := -debug_all -M -I +lint=TFIPC-L -debug_pp glbl \
	-ntb_opts tb_timescale=1ps/1ps -timescale=1ps/1ps \
	-sverilog -full64 +memcbk -licqueue -lca -v2005 

VCS_VFLAGS += $(if $(DEBUG),-gui,)
VCS_VFLAGS += $(if $(DEBUG),-R,)

# TODO: Implement DEBUG flag for GUI

.PHONY: simulator.clean squeakyclean 
.PRECIOUS: $(SIM_PATH)/%.log $(SIM_PATH)/%

$(TESTBENCH_PATH)/synopsys_sim.setup: | $(SIMLIBS_PATH)
$(SIMLIBS_PATH): $(TESTBENCH_PATH)/gen_simlibs.tcl
	cd $(TESTBENCH_PATH) && TESTBENCH_PATH=$(TESTBENCH_PATH) \
	vivado -mode batch -source $<

$(SIM_PATH)/synopsys_sim.setup: $(TESTBENCH_PATH)/synopsys_sim.setup
	cp $< $@

$(SIM_PATH)/AN.DB: $(HARDWARE_TARGETS) $(VLOGAN_FILELIST) $(SIM_PATH)/synopsys_sim.setup 
	CL_DIR=$(CL_DIR) \
	BSG_MANYCORE_DIR=$(BSG_MANYCORE_DIR) \
	BASEJUMP_STL_DIR=$(BASEJUMP_STL_DIR) \
	XILINX_IP=$(XILINX_IP) \
	vlogan $(VLOGAN_VFLAGS) -f $(VLOGAN_FILELIST) $(TESTBENCH_PATH)/$(V_TOP_SRC).sv $(VLOGAN_DEFINES) -l compile.vlogan.log

$(C_REGRESSION_TESTS): %: $(SIM_PATH)/%

$(SIM_PATH)/%: $(TESTS_PATH)/%.c $(CSOURCES) | $(SIM_PATH)/AN.DB
	vcs tb $(V_TOP_SRC) $< $(VCS_CFLAGS) $(CSOURCES) $(VCS_VFLAGS) -o $@ -l compile.vcs.log

$(SIM_PATH)/%.cosim.log: $(SIM_PATH)/%
	$< -l $@ +ntb_random_seed_automatic +vpdfile+$<.vpd

simulator.clean:
	rm -rf $(SIM_PATH)/AN.DB $(SIM_PATH)/DVEfiles
	rm -rf $(SIM_PATH)/*.daidir $(SIM_PATH)/csrc $(SIM_PATH)/64 $(SIM_PATH)/.cxl*
	rm -rf $(SIM_PATH)/*.log $(SIM_PATH)/*.jou $(SIM_PATH)/synopsys_sim.setup 
	rm -rf $(SIM_PATH)/*.key $(SIM_PATH)/*.vpd $(SIM_PATH)/vc_hdrs.h
	rm -rf $(C_REGRESSION_TESTS) .vlogansetup* 

squeakyclean:
	rm -rf $(TESTBENCH_PATH)/synopsys_sim.setup
	rm -rf $(SIMLIBS_PATH)
